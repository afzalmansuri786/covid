{"version":3,"sources":["components/covid.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setData","getCovidData","a","fetch","res","json","actualData","statewise","console","log","useEffect","class","map","dat","state","id","recovered","active","confirmed","deaths","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA8GeA,EAzGD,WAEV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGMC,EAAY,uCAAG,8BAAAC,EAAA,+EAEKC,MAAM,0CAFX,cAEPC,EAFO,gBAGYA,EAAIC,OAHhB,OAGPC,EAHO,OAObN,EAAQM,EAAWC,WAPN,kDASbC,QAAQC,IAAI,SATC,0DAAH,qDAqDpB,OArCED,QAAQC,IAAIV,GAiCZW,qBAAU,WACNT,MACD,IAIH,qCACI,oCACI,oBAAIU,MAAM,UAAV,8BACA,0DAEJ,8BACI,kCAEI,+BACI,uCACA,2CACA,2CACA,wCACA,wCACA,gDAGHZ,EAAKa,KAAI,SAAAC,GAAG,OACT,+BACA,6BAAkBA,EAAIC,OAAbD,EAAIE,IACb,6BAAkBF,EAAIG,WAAbH,EAAIE,IACb,6BAAkBF,EAAII,QAAbJ,EAAIE,IACb,6BAAkBF,EAAIK,WAAbL,EAAIE,IACb,6BAAkBF,EAAIM,QAAbN,EAAIE,IACb,6BAAkBF,EAAIO,iBAAbP,EAAIE,eAOrB,qBAAKA,GAAG,KAAR,SACQ,+BACI,2CACA,gDACA,gDACA,6CACA,6CACA,yDC7FTM,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee81c2b9.chunk.js","sourcesContent":["// import { cleanup } from \"@testing-library/react\";\r\nimport React,  { useEffect, useState } from \"react\";\r\n// import { Row } from \"reactstrap\";\r\nimport \"./covid.css\";\r\n\r\nconst Covid = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n   \r\n\r\n    const getCovidData = async () => {\r\n        try{\r\n            const res = await fetch('https://api.covid19india.org/data.json');\r\n            const actualData = await res.json();\r\n            // console.log(actualData);\r\n            // console.log(actualData);\r\n            // console.log(actualData.statewise);\r\n            setData(actualData.statewise);\r\n        }catch(err){\r\n            console.log(\"error\");\r\n        } \r\n    }\r\n    // const no = data[1].map((x)=>{   \r\n    //     return x; \r\n    //   });\r\n    // console.log(no);\r\n    console.log(data);\r\n\r\n    // const x = () => {\r\n    //     var i;\r\n    //     for(i=0; i < data.length ;i++){\r\n    //         <tr>\r\n    //             <td>{data[i].state}</td>\r\n    //             <td>{data[i].recovered}</td>\r\n    //             <td>{data[i].deaths}</td>\r\n    //             <td>{data[i].active}</td>\r\n    //             <td>{data[i].confirmed}</td>\r\n    //         </tr>\r\n    //     }\r\n    \r\n        \r\n    // }\r\n    \r\n    \r\n      \r\n        //     for(var i=0; i<data.length ; i++){\r\n        //     console.log(data[i].lastupdatedtime);\r\n        //     <tr value={data[i].state}>\r\n        //         <td>{data[i].state}</td>\r\n        //         <td>{data[i].active}</td>\r\n        //         <td>{data[i].deaths}</td>\r\n        //         <td>{data[i].confirmed}</td>\r\n        //         <td>{data[i].lastupdatedtime}</td>;\r\n        //     </tr>;\r\n            \r\n        // }\r\n    \r\n \r\n\r\n    useEffect(() => {\r\n        getCovidData();\r\n    }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n        <section>\r\n            <h1 class=\"blinker\">ðŸ”´Live</h1>\r\n            <h2>Covid-19 LiveTracker </h2>\r\n        </section>\r\n        <div>\r\n            <table>\r\n                \r\n                <tr>\r\n                    <td>State</td>\r\n                    <td>Recovered</td>\r\n                    <td>Confirmed</td>\r\n                    <td>Deaths</td>\r\n                    <td>Active</td>\r\n                    <td>LastUpdated</td>\r\n                </tr>\r\n                \r\n                {data.map(dat => (\r\n                    <tr>\r\n                    <td key={dat.id}>{dat.state}</td>\r\n                    <td key={dat.id}>{dat.recovered}</td>\r\n                    <td key={dat.id}>{dat.active}</td>\r\n                    <td key={dat.id}>{dat.confirmed}</td>\r\n                    <td key={dat.id}>{dat.deaths}</td>\r\n                    <td key={dat.id}>{dat.lastupdatedtime}</td>\r\n                    </tr>\r\n                ))}\r\n\r\n            </table>\r\n        \r\n            </div>\r\n            <div id=\"fx\">\r\n                    <ul>\r\n                        <li>StateName</li>\r\n                        <li>TotalRecovered</li>\r\n                        <li>TotalConfirmed</li>\r\n                        <li>TotalDeaths</li>\r\n                        <li>TotalActive</li>\r\n                        <li>LastUpdateTime</li>\r\n                    </ul>\r\n            </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Covid;\r\n","import React from \"react\";\nimport Covid from \"./components/covid\";\nfunction App() {\n  return (\n    <>\n      <Covid />     \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}