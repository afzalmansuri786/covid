{"version":3,"sources":["components/Navbar/NavbarElements.js","components/Navbar/index.js","pages/home.js","pages/blogs.js","pages/about.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","Navbar","to","activeStyle","Covid","useState","data","setData","getCovidData","a","fetch","res","json","actualData","console","log","statewise","sortTable","f","n","rows","$","get","getVal","elm","v","children","eq","text","toUpperCase","isNumeric","parseInt","sort","b","A","B","each","index","row","append","f_sl","f_nm","click","this","prevAll","length","document","ready","find","css","keyup","search","val","hide","closest","show","expr","contains","createPseudo","arg","elem","indexOf","useEffect","name","content","className","id","type","placeholder","datatype","src","map","state","confirmed","active","recovered","deaths","lastupdatedtime","allowtransparency","height","frameborder","Blogs","style","display","justifyContent","alignItems","About","App","path","exact","component","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.659cd122.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\nbackground: #63D471;\r\nheight: 85px;\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 0.2rem calc((100vw - 1000px) / 2);\r\nz-index: 12;\r\n/* Third Nav */\r\n/* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\ncolor: #808080;\r\ndisplay: flex;\r\nalign-items: center;\r\ntext-decoration: none;\r\npadding: 0 1rem;\r\nheight: 100%;\r\ncursor: pointer;\r\n&.active {\r\n\tcolor: #000000;\r\n}\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\ndisplay: none;\r\ncolor: #808080;\r\n@media screen and (max-width: 768px) {\r\n\tdisplay: block;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tright: 0;\r\n\ttransform: translate(-100%, 75%);\r\n\tfont-size: 1.8rem;\r\n\tcursor: pointer;\r\n}\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-right: -24px;\r\n/* Second Nav */\r\n/* margin-right: 24px; */\r\n/* Third Nav */\r\n/* width: 100vw;\r\nwhite-space: nowrap; */\r\n@media screen and (max-width: 768px) {\r\n\tdisplay: none;\r\n}\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-right: 24px;\r\n/* Third Nav */\r\n/* justify-content: flex-end;\r\nwidth: 100vw; */\r\n@media screen and (max-width: 768px) {\r\n\tdisplay: none;\r\n}\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\nborder-radius: 4px;\r\nbackground: #808080;\r\npadding: 10px 22px;\r\ncolor: #000000;\r\noutline: none;\r\nborder: none;\r\ncursor: pointer;\r\ntransition: all 0.2s ease-in-out;\r\ntext-decoration: none;\r\n/* Second Nav */\r\nmargin-left: 24px;\r\n&:hover {\r\n\ttransition: all 0.2s ease-in-out;\r\n\tbackground: #fff;\r\n\tcolor: #808080;\r\n}\r\n`;\r\n","import React from 'react';\r\nimport {\r\nNav,\r\nNavLink,\r\nBars,\r\nNavMenu,\r\nNavBtn,\r\nNavBtnLink,\r\n} from './NavbarElements';\r\n\r\nconst Navbar = () => {\r\nreturn (\r\n\t<>\r\n\t<Nav>\r\n\t\t<Bars />\r\n\r\n\t\t<NavMenu>\r\n\t\t<NavLink to='./home' activeStyle>\r\n\t\t\tHomepage\r\n\t\t</NavLink>\r\n\t\t<NavLink to='/about' activeStyle>\r\n\t\t\tAbout\r\n\t\t</NavLink>\r\n\t\t<NavLink to='/annual' activeStyle>\r\n\t\t\tGuidelines\r\n\t\t</NavLink>\r\n\t\t<NavLink to='/team' activeStyle>\r\n\t\t\tHelplines\r\n\t\t</NavLink>\r\n\t\t{/* Second Nav */}\r\n\t\t{/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n\t\t{/* </NavMenu>\r\n\t\t<NavBtn>\r\n\t\t<NavBtnLink to='/signin'>Sign In</NavBtnLink>\r\n\t\t</NavBtn> */}\r\n\t</NavMenu>\r\n    </Nav>\r\n\t</>\r\n);\r\n};\r\n\r\nexport default Navbar;\r\n","// import { cleanup } from \"@testing-library/react\";\r\nimport React,  { useEffect, useState } from \"react\";\r\n// import { Row } from \"reactstrap\";\r\nimport \"../components/covid.css\";\r\nimport $ from \"jquery\";\r\nimport MetaTags from 'react-meta-tags';\r\n\r\n\r\n\r\nconst Covid = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n   \r\n\r\n    const getCovidData = async () => {\r\n        try{\r\n            const res = await fetch(\"https://data.covid19india.org/data.json\");\r\n            const actualData = await res.json();\r\n            console.log(actualData);\r\n            console.log(actualData);\r\n            console.log(actualData.statewise);\r\n            setData(actualData.statewise);\r\n        }catch(err){\r\n            console.log(\"error\");\r\n        } \r\n    }\r\n    // const no = data[1].map((x)=>{   \r\n    //     return x; \r\n    //   });\r\n    // console.log(no);\r\n    console.log(data);\r\n\r\n    // const x = () => {\r\n    //     var i;\r\n    //     for(i=0; i < data.length ;i++){\r\n    //         <tr>\r\n    //             <td>{data[i].state}</td>\r\n    //             <td>{data[i].recovered}</td>\r\n    //             <td>{data[i].deaths}</td>\r\n    //             <td>{data[i].active}</td>\r\n    //             <td>{data[i].confirmed}</td>\r\n    //         </tr>\r\n    //     }\r\n    \r\n        \r\n    // }\r\n    \r\n    \r\n      \r\n        //     for(var i=0; i<data.length ; i++){\r\n        //     console.log(data[i].lastupdatedtime);\r\n        //     <tr value={data[i].state}>\r\n        //         <td>{data[i].state}</td>\r\n        //         <td>{data[i].active}</td>\r\n        //         <td>{data[i].deaths}</td>\r\n        //         <td>{data[i].confirmed}</td>\r\n        //         <td>{data[i].lastupdatedtime}</td>;\r\n        //     </tr>;\r\n            \r\n        // }\r\n\r\n\r\n\r\n        function sortTable(f,n){\r\n            var rows = $('#mytable tbody  tr').get();\r\n        \r\n            rows.sort(function(a, b) {\r\n        \r\n                var A = getVal(a);\r\n                var B = getVal(b);\r\n                \r\n                if(A < B) {\r\n                    return -1*f;\r\n                }\r\n                if(A > B) {\r\n                    return 1*f;\r\n                }\r\n                return 0;\r\n            });\r\n        \r\n            function getVal(elm){\r\n                var v = $(elm).children('td').eq(n).text().toUpperCase();\r\n                if($.isNumeric(v)){\r\n                    v = parseInt(v,10);\r\n                }\r\n                return v;\r\n            }\r\n        \r\n            $.each(rows, function(index, row) {\r\n                $('#mytable').children('tbody').append(row);\r\n            });\r\n        }\r\n        var f_sl = 1;\r\n        var f_nm = 1;\r\n        // $(\"#nm\").click(function(){\r\n        //     f_sl *= -1;\r\n        //     var n = $(this).prevAll().length;\r\n        //     sortTable(f_sl,n);\r\n        // });\r\n        $(\"#cnf\").click(function(){\r\n            f_sl *= -1;\r\n            var n = $(this).prevAll().length;\r\n            sortTable(f_sl,n);\r\n        });\r\n        $(\"#act\").click(function(){\r\n            f_nm *= -1;\r\n            var n = $(this).prevAll().length;\r\n            sortTable(f_nm,n);\r\n        });\r\n        $(\"#rcv\").click(function(){\r\n            f_nm *= -1;\r\n            var n = $(this).prevAll().length;\r\n            sortTable(f_nm,n);\r\n        });\r\n        $(\"#dth\").click(function(){\r\n            f_nm *= -1;\r\n            var n = $(this).prevAll().length;\r\n            sortTable(f_nm,n);\r\n        });\r\n\r\n        $(document).ready(function(){\r\n            $('table tr').each(function(){\r\n                if($(this).find('tr').eq(0).text() == 'State Unassigned'){\r\n                    $(this).css('display','none');\r\n                }\r\n            });\r\n        });\r\n\r\n        \r\n        \r\n        // $('table').sortable({items: 'tr:not(:first)'});\r\n\r\n        $('#txt_searchall').keyup(function(){\r\n            \r\n            // Search Text\r\n            var search = $(this).val();\r\n        \r\n            // Hide all table tbody rows\r\n            $('table tbody tr').hide();\r\n            \r\n        \r\n            // Count total search result\r\n            var len = $('table tbody tr:not(.notfound) td:contains(\"'+search+'\")').length;\r\n            \r\n            if(len > 0){\r\n              // Searching text in columns and show match row\r\n              $('table tbody tr:not(.notfound) td:contains(\"'+search+'\")').each(function(){\r\n                $(this).closest('tr').show();\r\n                $('table tbody tr:nth-child(1)').show();\r\n                $(\"tr:contains('Total')\").show();\r\n                // if (\"td:contains('State Unassigned')\") {\r\n                //     $(this).css('display','none');\r\n                // }\r\n\r\n                $('td:contains(\"State Unassigned\")').closest('tr').css('display','none');\r\n\r\n                \r\n\r\n              });\r\n            }else{\r\n              $('.notfound').show();\r\n            }\r\n        \r\n          });\r\n          // Case-insensitive searching (Note - remove the below script for Case sensitive search )\r\n            $.expr[\":\"].contains = $.expr.createPseudo(function(arg) {\r\n                return function( elem ) {\r\n                return $(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;\r\n                };\r\n            });\r\n\r\n        \r\n    \r\n \r\n\r\n    useEffect(() => {\r\n        getCovidData();\r\n    }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n        {/* <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/> */}\r\n        <MetaTags>\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n        </MetaTags>\r\n        <section>\r\n            <h1 className=\"blinker\">🔴Live</h1>\r\n            <h2>Covid-19 LiveTracker </h2>\r\n        </section>\r\n\r\n\r\n        <div id=\"search\">\r\n            <input type='text' id='txt_searchall' placeholder='Enter search text'/>\r\n        </div>\r\n\r\n\r\n        \r\n        <div>\r\n        \r\n            <table id=\"mytable\">\r\n            \r\n                <tbody>\r\n                \r\n                <tr id=\"fix\">\r\n                    {/* <img src=\"https://img.icons8.com/material-outlined/24/000000/sort.png\"/> */}\r\n                    <td id=\"nm\" datatype=\"string\">StateName</td>\r\n                    <td id=\"cnf\" data-type=\"number\">Confirmed<img src=\"https://img.icons8.com/material-outlined/24/000000/sort.png\"/></td>\r\n                    <td id=\"act\" data-type=\"number\">Active<img src=\"https://img.icons8.com/material-outlined/24/000000/sort.png\"/></td>\r\n                    <td id=\"rcv\" data-type=\"number\">Recovered<img src=\"https://img.icons8.com/material-outlined/24/000000/sort.png\"/></td>\r\n                    <td id=\"dth\" data-type=\"number\">Deaths<img src=\"https://img.icons8.com/material-outlined/24/000000/sort.png\"/></td>\r\n                    <td>LastUpdated</td>\r\n                </tr>\r\n                \r\n                \r\n                \r\n                {\r\n                    data.map(data => (\r\n                    <tr id=\"content\">\r\n\r\n                        <td key={data.id}>{data.state}</td>\r\n                        <td key={data.id}>{data.confirmed}</td>\r\n                        <td key={data.id}>{data.active}</td>\r\n                        <td key={data.id}>{data.recovered}</td>\r\n                        <td key={data.id}>{data.deaths}</td>\r\n                        <td key={data.id}>{data.lastupdatedtime}</td>\r\n                    </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n\r\n            </table>\r\n        \r\n            </div>\r\n\r\n            <div id=\"worldmap\">\r\n                <iframe allowtransparency=\"true\" src=\"https://public.domo.com/cards/31O7r\" height=\"600\" frameborder=\"0\"></iframe>\r\n            </div>\r\n            {/* <div id=\"fx\">\r\n                    <ul>\r\n                        <li>StateName</li>\r\n                        <li>TotalRecovered</li>\r\n                        <li>TotalConfirmed</li>\r\n                        <li>TotalDeaths</li>\r\n                        <li>TotalActive</li>\r\n                        <li>LastUpdateTime</li>\r\n                    </ul>\r\n            </div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Covid;\r\n","import React from 'react';\r\n\r\nconst Blogs = () => {\r\nreturn (\r\n\t<div\r\n\tstyle={{\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'Right',\r\n\t\talignItems: 'Right',\r\n\t\theight: '100vh'\r\n\t}}\r\n\t>\r\n\t<h1>Welcome to GeeksforGeeks Blogs</h1>\r\n\t</div>\r\n);\r\n};\r\n\r\nexport default Blogs;\r\n","import React,  { useState } from \"react\";\r\n\r\nconst About = () => {\r\n\r\n\tconst [data, setData] = useState([]);\r\n   \r\n\r\n    const getContacts = async () => {\r\n        try{\r\n            const res = await fetch(\"https://api.rootnet.in/covid19-in/contacts.json\");\r\n            const actualData = await res.json();\r\n            // console.log(actualData);\r\n            // console.log(actualData);\r\n            console.log(actualData.data.contacts);\r\n            setData(actualData.data.contacts);\r\n        }catch(err){\r\n            console.log(\"error\");\r\n        } \r\n    }\r\n   \r\n}\r\n        \r\n    \r\n \r\n\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport Covid from \"./components/covid\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/home\";\nimport Blogs from \"./pages/blogs\";\n\nimport About from './pages/about';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path='/home' exact component={Home} />\n        <Route path='/about' component={About} />\n        <Route path='/blogs' component={Blogs} />\n      </Switch>\n    </Router>\n    \n  );\n}\n{/* <>\n      <Covid />     \n    </> */}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}